{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2140d071",
   "metadata": {},
   "outputs": [],
   "source": [
    "## DEU CERTO, PEGANDO OS 4 CARTOES\n",
    "## COLOQUEI BA3 COM TELEFONE\n",
    "## primeiro ver cartao beneficio\n",
    "\n",
    "\n",
    "from zeep import Client\n",
    "import logging\n",
    "logging.getLogger('zeep.wsdl.bindings.soap').setLevel(logging.ERROR)\n",
    "from openpyxl import Workbook\n",
    "\n",
    "\n",
    "# Cria uma nova planilha do Excel\n",
    "planilha = Workbook()\n",
    "\n",
    "# Seleciona a planilha ativa\n",
    "planilha_ativa = planilha.active\n",
    "\n",
    "# Adiciona os títulos das colunas\n",
    "planilha_ativa.append([\"CPF\", \"SALDO\"])\n",
    "\n",
    "\n",
    "import pandas as pd\n",
    "contatos_df = pd.read_excel(\"bmgconsulta.xlsx\")\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "for i, cpf in enumerate(contatos_df['cpf']):\n",
    "    try:\n",
    "        cpf2 = contatos_df.loc[i, \"ade\"]\n",
    "\n",
    "        if '-' in cpf2 or '.' in cpf2:\n",
    "            cpf2 = cpf2.replace(\"-\",\"\" ).replace(\".\",\"\" )\n",
    "        else:\n",
    "            cpf2 = cpf2\n",
    "\n",
    "\n",
    "        #cpf = '11867655691'\n",
    "        username = 'vitor.helpvix'\n",
    "        password = '70da6fe%'\n",
    "        codigoEntidade = 1581\n",
    "\n",
    "        client = Client('https://ws1.bmgconsig.com.br/webservices/SaqueComplementar?wsdl')\n",
    "\n",
    "        entrada = {\n",
    "          'login': username,\n",
    "          'senha': password,\n",
    "          'codigoEntidade': codigoEntidade,\n",
    "          'cpf': cpf2,\n",
    "\n",
    "\n",
    "        }\n",
    "        # Aqui você pode chamar as operações disponíveis no Web Service\n",
    "        result = client.service.buscarCartoesDisponiveis(entrada)\n",
    "\n",
    "        # Imprimir o resultado da operação\n",
    "        #print(result)\n",
    "        cartoesRetorno = result.cartoesRetorno\n",
    "        #numeroContaInterna = cartoesRetorno.numeroContaInterna\n",
    "        #print(cartoesRetorno)\n",
    "        numeroContaInterna = cartoesRetorno[0]['numeroContaInterna']\n",
    "        for i in range(3):\n",
    "            try:\n",
    "                numeroContaInterna = cartoesRetorno[i]['numeroContaInterna']\n",
    "                #print(numeroContaInterna)\n",
    "\n",
    "            except:\n",
    "                break\n",
    "        #print(i)\n",
    "\n",
    "            #print(cpf2, 'cliente possui dois beneficios')\n",
    "        for i in range(2):\n",
    "            numeroContaInterna = cartoesRetorno[i]['numeroContaInterna']\n",
    "            with client.settings(strict=False):\n",
    "                entrada = {\n",
    "                    'login': username,\n",
    "                    'senha': password,\n",
    "                    'codigoEntidade': '1581',\n",
    "                    'cpf': cpf2,\n",
    "                    'numeroContaInterna': numeroContaInterna,\n",
    "                    'tipoSaque': 1,\n",
    "                    'cpfImpedidoComissionar': False\n",
    "                }\n",
    "                result = client.service.buscarLimiteSaque(entrada)\n",
    "                #print(result)\n",
    "\n",
    "                valorSaqueMaximo = result.valorSaqueMaximo\n",
    "                valorSaqueMaximo = str(valorSaqueMaximo).replace(\".\", \",\")\n",
    "    #             if valorSaqueMaximo == 0:\n",
    "    #                 pass\n",
    "    #             else:\n",
    "                print(cpf2, valorSaqueMaximo)\n",
    "                planilha_ativa.append([cpf2, valorSaqueMaximo])\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "            \n",
    "    except:\n",
    "        pass\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "planilha.save(filename=\"bmgconsultacompleto.xlsx\")\n",
    "\n",
    "    \n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
